//===----------------------------------------------------------------------===//
//
// This source file is part of the SwiftNIO open source project
//
// Copyright (c) 2017-2018 Apple Inc. and the SwiftNIO project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of SwiftNIO project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//
//
// UserAuthenticationStateMachineTests+XCTest.swift
//
import XCTest

///
/// NOTE: This file was generated by generate_linux_tests.rb
///
/// Do NOT edit this file directly as it will be regenerated automatically when needed.
///

extension UserAuthenticationStateMachineTests {

   static var allTests : [(String, (UserAuthenticationStateMachineTests) -> () throws -> Void)] {
      return [
                ("testBasicHappyClientFlow", testBasicHappyClientFlow),
                ("testBasicSadClientFlow", testBasicSadClientFlow),
                ("testBasicSadThenHappyClientFlow", testBasicSadThenHappyClientFlow),
                ("testAuthMessagesAfterSuccessAreIgnored", testAuthMessagesAfterSuccessAreIgnored),
                ("testUnsolicitedResponseBeforeInitIsInvalid", testUnsolicitedResponseBeforeInitIsInvalid),
                ("testUnsolicitedResponseAfterInitBeforeSendingIsInvalid", testUnsolicitedResponseAfterInitBeforeSendingIsInvalid),
                ("testUnsolicitedResponseAfterFailureBeforeNextRequestIsInvalid", testUnsolicitedResponseAfterFailureBeforeNextRequestIsInvalid),
                ("testUnsolicitedResponseAfterCompleteFailureIsInvalid", testUnsolicitedResponseAfterCompleteFailureIsInvalid),
                ("testServersMayNotReceiveUserAuthSuccessMessages", testServersMayNotReceiveUserAuthSuccessMessages),
                ("testServersMayNotReceiveUserAuthFailureMessages", testServersMayNotReceiveUserAuthFailureMessages),
                ("testBasicServerRejections", testBasicServerRejections),
                ("testManyAuthRequestsInFlightAtOnce", testManyAuthRequestsInFlightAtOnce),
                ("testSimpleServerHappyPath", testSimpleServerHappyPath),
                ("testServerIgnoresMessagesAfterSuccess", testServerIgnoresMessagesAfterSuccess),
                ("testClientRejectsUserAuthRequests", testClientRejectsUserAuthRequests),
                ("testSimplePasswordDelegateOnlyTriesPassword", testSimplePasswordDelegateOnlyTriesPassword),
                ("testBeginningAuthenticationOnServersDoesNothing", testBeginningAuthenticationOnServersDoesNothing),
                ("testRejectUnexpectedServices", testRejectUnexpectedServices),
                ("testRepeatedServiceRequestsDontWork", testRepeatedServiceRequestsDontWork),
                ("testClientsRejectUserAuthRequests", testClientsRejectUserAuthRequests),
                ("testClientsRejectUnexpectedAuthServices", testClientsRejectUnexpectedAuthServices),
                ("testClientsRejectServiceAcceptOutOfSequence", testClientsRejectServiceAcceptOutOfSequence),
                ("testServerRejectsServiceAccepts", testServerRejectsServiceAccepts),
                ("testUserAuthRequestsMustAskForSSHConnection", testUserAuthRequestsMustAskForSSHConnection),
                ("testUserAuthBeforeServiceAcceptIsRejected", testUserAuthBeforeServiceAcceptIsRejected),
                ("testPrivateKeyServerAuthFlow", testPrivateKeyServerAuthFlow),
                ("testServerPerformsValidationsOnSignatures", testServerPerformsValidationsOnSignatures),
                ("testPrivateKeyClientAuthFlow", testPrivateKeyClientAuthFlow),
           ]
   }
}

